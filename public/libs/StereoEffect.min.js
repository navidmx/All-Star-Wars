THREE.StereoEffect=function(e){var t=this;this.eyeSeparation=3,this.focalLength=15,Object.defineProperties(this,{separation:{get:function(){return t.eyeSeparation},set:function(e){console.warn("THREE.StereoEffect: .separation is now .eyeSeparation."),t.eyeSeparation=e}},targetDistance:{get:function(){return t.focalLength},set:function(e){console.warn("THREE.StereoEffect: .targetDistance is now .focalLength."),t.focalLength=e}}});var n,r,u,f,l,h,p,d,v,m,y,g,o=new THREE.Vector3,i=new THREE.Quaternion,a=new THREE.Vector3,s=new THREE.PerspectiveCamera,c=new THREE.PerspectiveCamera;e.autoClear=!1,this.setSize=function(t,o){n=t/2,r=o,e.setSize(t,o)},this.render=function(t,b){t.updateMatrixWorld(),null===b.parent&&b.updateMatrixWorld(),b.matrixWorld.decompose(o,i,a),u=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(b.fov))/b.zoom)),d=b.near/this.focalLength,m=Math.tan(.5*THREE.Math.degToRad(u))*this.focalLength,v=.5*m*b.aspect,h=m*d,p=-h,y=(v+this.eyeSeparation/2)/(2*v),g=1-y,f=2*v*d*g,l=2*v*d*y,s.projectionMatrix.makeFrustum(-f,l,p,h,b.near,b.far),s.position.copy(o),s.quaternion.copy(i),s.translateX(-this.eyeSeparation/2),c.projectionMatrix.makeFrustum(-l,f,p,h,b.near,b.far),c.position.copy(o),c.quaternion.copy(i),c.translateX(this.eyeSeparation/2),e.clear(),e.enableScissorTest(!0),e.setScissor(0,0,n,r),e.setViewport(0,0,n,r),e.render(t,s),e.setScissor(n,0,n,r),e.setViewport(n,0,n,r),e.render(t,c),e.enableScissorTest(!1)}};
